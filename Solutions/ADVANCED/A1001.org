* 1001 A+B Format (20)（20 分）
Calculate a + b and output the sum in standard format -- that is, the digits must be separated into groups of three by commas (unless there are less than four digits).

** Input

Each input file contains one test case. Each case contains a pair of integers a and b where -1000000 <= a, b <= 1000000. The numbers are separated by a space.

** Output

For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.

** Sample Input:
#+BEGIN_SRC text
-1000000 9
#+END_SRC
** Sample Output:
#+BEGIN_SRC text
-999,991
#+END_SRC
** Analyzation

字符串处理，输入两个整型 用标准形式输出他们的和 (每3个0插入一个',')

较佳思路: 根据和的字符串长度确定插入位置
#+BEGIN_SRC text
0 1 2 3 4 5 6 7 8 9
-------------------
1 2 3 \0
- 1 2 3 \0
1,2 3 4 \0         长度为4 i=0 与 i = 1 之间
- 1,2 3 4 \0       长度为5 i=1 与 i = 2 之间
1 2 3,4 5 6 \0     长度为6 i=2 与 i=3 之间
- 1 2 3,4 5 6 \0   长度为7 i=0 与 i=1(弃)  i=3 与 i=4 之间
1,2 3 4,5 6 7 \0   长度为7 i=0 与 i=1 之间 i=3 与 i=4 之间
#+END_SRC
所以只要 (i+1)%3 == len%3 且 str[i+1]!=NULL 就应该插入输出一个 ','

并且负数时 要避免在 '-' 后面插入 ',' 的情况发生

较差思路：往后往前数每三位插入一个',' (== 取余的操作）

实现繁琐:判断正负之后从右往左逐位取数

** Solutions
#+BEGIN_SRC c++
#include <stdio.h>
#include <string.h>
int main() {
  int a, b, len;
  char str[15];
  scanf("%d%d", &a, &b);
  sprintf(str, "%d", a+b);
  len = strlen(str);
  for(int i=0; i<len; i++){
    printf("%c", str[i]);
    if(str[i]=='-') continue;
    if((i+1)%3==len%3&&str[i+1]) printf(",");
  }
  return 0;
}
#+END_SRC

** old & bad Solutions
#+BEGIN_SRC c++
#include <stdio.h>
int main() {
  int a, b, sum, ps; // ps 用来访问 string 数组
  char str[15];
  scanf("%d%d", &a, &b);
  sum = a+b;
  ps = 0;
  if(sum<0){
    str[ps] = '-';
    sum *= -1;
  }else{
    str[ps] = NULL;
  }
    ps++;
  while(sum){ // BUG!sum 为0时无法输出
    if(!(ps%4)) // 每取完3个数字后插入一个','
      str[ps++] = ',';
    str[ps++] = sum%10 + 48;
      sum /= 10;
    }
    ps--;
    printf("%c", str[0]); // BUG!输出符号位 如果输出 NULL 为错误答案
    while(ps>0)
      printf("%c", str[ps--]);
  return 0;
}
// 部分通过
// 原因
// 1 a+b = 0 时无法输出 0
// 2 整数 输出了 NULL
// 修改通过 ...
#include <stdio.h>
#include <math.h>
int main() {
  int a, b, sum, ps; // ps 用来访问 string 数组
  char str[15];
  scanf("%d%d", &a, &b);
  sum = a+b;
  ps = 0;
  if(sum==0) // **
    printf("0");
  else{
    if(sum<0){
      str[ps] = '-';
      sum *= -1;
    }else{
      str[ps] = NULL;
    }
    ps++;
    while(sum){
      if(!(ps%4)) // standard format 每3个数字插入一个 ,
        str[ps++] = ',';
      str[ps++] = sum%10 + 48; // 指针指在 n+1 处 n 为 sum 的位数
      sum = floor(sum/10);
    }
    ps--;
    if(str[0]) // **
      printf("%c", str[0]); // 输出符号位
    while(ps>0)
      printf("%c", str[ps--]);
  }
  return 0;
}
#+END_SRC

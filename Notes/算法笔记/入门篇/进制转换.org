* P 进制 转换为 Q 进制 （十进制做为中间过渡）
例题 PAT 乙级 [[file:../../../Solutions/BASIC/B1022.org][1022 D进制的A+B（20 分）]]
** P 进制数 x 转十进制

Y_十进制 = d_nd_n-1....d_1d_0 = d_n * 10^n + ... + d_1 * 10 + d_0

注意到任何进制下的数都可以用编码的位数和基底，使用如上十进制的加乘运算，用十进制的位置表示法表示出来。

#+BEGIN_SRC c++
  //代码操作
  int y = 0, product = 1, p = 7; //product 在循环中不断乘 p ，得到 1，p, p^2 ... p^n; 以 七进制为例
  while(x!=0){
      y = y + (x % 10)*product; //x%10 每次取 x 的个位数
      x = x / 10; //去掉 x 的个位
      product = product * p; //产生 1，p, p^2 ... p^n
  }
#+END_SRC
** 十进制转 Q 进制 z

任何十进制数编码转到其他进制，对该十进制数不断除转换进制的基底，得到余数列 {a_0 , a_1 , ... a_n-1 , a_n} 即为该数在该进制下的编码（倒序）。

称为 “除基取余法”

#+BEGIN_SRC c++
  int z[40], num = 0, q = 8; //数组 z 存放 Q进制数 的每一位编码, num 为位数 z_num = a_num ; 以 八进制为例
  do{
      z[num++] = y % q; //除基取余
      y = y / q;
  } while(y!=0); //考虑到 y=0 情况采用 do while 可以让 z[0] 正确存储 0
  // 且当 q > 10 时，需要引入更多编码（如 12进制 0~9,A,B），则输出时要注意转换为对应字符
#+END_SRC

* 递归求解 n 的阶乘

计算式 n!=1*2*3*...*(n-1)*n

递推形式 n!=(n-1)!*n

** 分析

递推形式就包含了分治的思想，求解 n! 先求解 子问题 (n-1)!

不妨用分治的三个步骤拆解一下

1. 分解：即递推式 n 的阶乘分为 n-1 的阶乘和 n 的积
2. 解决：分解直到 1! = 1
3. 合并：形式上就是计算式

用递归实现上述思想

若F(n)=n!

递归式：F(n)=F(n-1)*n （问题规模不断减小）
递归边界：F(0) = 1 /F(1) = 1

#+BEGIN_SRC c++
  #include <cstdio>
  int F(int n) {
      if(n==1||n==0) return 1; //递归边界
      else return F(n-1) * n; //递归式
  }
  int main() {
      int n;
      scanf("%d", &n);
      printf("%d\n", F(n));
      return 0;
  }
  //输入 3
  /*-----console-----
    3
    6
   ,*///------------
#+END_SRC

分析递归过程
#+BEGIN_SRC text
                        6
                        ^
                        |[5]
  1 | F(3)=F(2)*3       = 2*3
           |[1]         ^
           V            |[4]
  2 |      F(2)=F(1)*2  = 1*2
                |[2]    ^
                V       |[3]
  3 |           F(1)=1  = 1
#+END_SRC

* Fibonacci 数列

满足 F(0)=1, F(1)=1, F(n)=F(n-1)+F(b-2), (n>=2) 的数列

前几项为 1, 1, 2, 3, 5, 8, 13, 21, ...

目标：使用递归函数求第 n 项

** 分析

从定义可知

- 递归边界 F(0) = 1 / F(1) = 1
- 递归式 F(n) = F(n-1) + F(n-2)

#+BEGIN_SRC c++
  #include <cstdio>
  int F(int n) {
      if(n==0||n==1) return 1;    //递归边界
      else return F(n-1) + F(n-2);//递归式
  }
  int main() {
      int n;
      scanf("%d", &n);
      printf("%d\n", F(n));
      return 0;
  }
  //输入 4
  /*-----console-----
    4
    5
   ,*///------------
#+END_SRC

分析过程
#+BEGIN_SRC text
                                                                               5
                                                                               ^
                                                                               |[17]
  1 | F(4)=F(3)+F(2)                            = 3 + F(2)                     = 3+2
      |[1]                                      ^     |[11]                    ^
      V                                         |[10] V                        |[16]
  2 | F(3)=F(2)+F(1)                 = 2 + F(1) = 2+1 F(2)=F(1)+F(0)= 1 + F(0) =1+1
           |[2]                      ^     |[8] ^          |[12]    ^     |[14]^
           V                         |[7]  V    |[9]       V        |[13] V    |[15]
  3 |      F(2)=F(1)+F(0) = 1 + F(0) = 1+1 F(1) = 1        F(1) = 1 = 1   F(0) = 1
                |[3]      ^     |[5] ^
                V         |[4]  V    |[6]
  4 |           F(1) = 1  = 1   F(0) = 1
#+END_SRC

树状图
#+BEGIN_SRC text
  1 |                                  [F(4)=F(3)+F(2)]
                                             /     \
  2 |                             [F(3)=F(2)+F(1)] [F(2)=F(1)+F(0)]
                                        /     \          /     \
  3 |                       [F(2)=F(1)+F(0)] [F(1)=1] [F(1)=1] [F(0)=1]
                                  /     \
  4 |                         [F(1)=0] [F(0)=1]
#+END_SRC

也可以不用递归实现，注意到只需要存放 F(n-1) + F(n-2) 的值，就可以从 第一项推到第 n 项

#+BEGIN_SRC c++
  #include <cstdio>
  int fibonacci(int n){
      int fib[2] = {1,1}, pf = 0; //pf 用来存放访问下标
      while(n-->=2) fib[++pf%2] = fib[pf%2]+fib[(pf+1)%2]; //利用自然数的奇偶变换使得 fib数组 一直存放 F[n] 和 F[n-1]
      //while(n-->=2) fib[++pf%2] += fib[pf%2];
      return fib[pf%2];
  }
  int main() {
      // 输出前 11 项
      for(int i=0; i<=10; i++)
          printf("%d ", fibonacci(i));
      return 0;
  }
  /*-----console-----
    1 1 2 3 5 8 13 21 34 55 89
   ,*///------------
#+END_SRC
